name: CI/CD Pipeline

on:
  push:
    branches: [main, infra/*, feature/*, develop]
  pull_request:
    branches: [main, develop]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Set environment variables
        run: |
          if [[ ${{ github.ref }} == 'refs/heads/main' ]]; then
            echo "ENV_SUFFIX=prod" >> $GITHUB_ENV
          else
            echo "ENV_SUFFIX=dev" >> $GITHUB_ENV
          fi
          echo "COMMIT_HASH=$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_ENV

      - name: Build and Push Backend Docker image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: hanazoom-backend
          IMAGE_TAG: ${{ env.ENV_SUFFIX }}-${{ env.COMMIT_HASH }}
        working-directory: ./BE/HanaZoom
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          if [[ ${{ github.ref }} == 'refs/heads/main' ]]; then
            docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
            docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
          fi

      - name: Build and Push Frontend Docker image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: hanazoom-frontend
          IMAGE_TAG: ${{ env.ENV_SUFFIX }}-${{ env.COMMIT_HASH }}
        working-directory: ./FE
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          if [[ ${{ github.ref }} == 'refs/heads/main' ]]; then
            docker tag $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:latest
            docker push $ECR_REGISTRY/$ECR_REPOSITORY:latest
          fi

  deploy:
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/heads/infra/')

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ap-northeast-2

      - name: Set environment variables
        run: |
          if [[ ${{ github.ref }} == 'refs/heads/main' ]]; then
            echo "EC2_HOST=${{ secrets.PROD_EC2_HOST }}" >> $GITHUB_ENV
            echo "ENV_SUFFIX=prod" >> $GITHUB_ENV
          else
            echo "EC2_HOST=${{ secrets.DEV_EC2_HOST }}" >> $GITHUB_ENV
            echo "ENV_SUFFIX=dev" >> $GITHUB_ENV
          fi
          echo "COMMIT_HASH=$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_ENV

      - name: Deploy to EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.EC2_HOST }}
          username: ${{ secrets.EC2_USERNAME }}
          key: ${{ secrets.EC2_SSH_KEY }}
          envs: ENV_SUFFIX,COMMIT_HASH
          script: |
            export ENV_SUFFIX=${{ env.ENV_SUFFIX }}
            export COMMIT_HASH=${{ env.COMMIT_HASH }}
            aws ecr get-login-password --region ap-northeast-2 | docker login --username AWS --password-stdin ${{ steps.login-ecr.outputs.registry }}
            cd /home/ec2-user/HanaZoom
            echo "ENV_SUFFIX=${ENV_SUFFIX}" > .env
            echo "IMAGE_TAG=${ENV_SUFFIX}-${COMMIT_HASH}" >> .env
            docker-compose pull
            docker-compose up -d
